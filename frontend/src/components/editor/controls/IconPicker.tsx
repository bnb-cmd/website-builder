import React, { useState } from 'react'
import { Button } from '../../ui/button'
import { Input } from '../../ui/input'
import { Label } from '../../ui/label'
import { Popover, PopoverContent, PopoverTrigger } from '../../ui/popover'
import { ScrollArea } from '../../ui/scroll-area'
import { Badge } from '../../ui/badge'
import { cn } from '@/lib/utils'

// Import common icons - you may need to adjust these based on your icon library
import {
  Home,
  User,
  Mail,
  Phone,
  MapPin,
  Calendar,
  Clock,
  Star,
  Heart,
  Share2,
  Download,
  Upload,
  Search,
  Filter,
  Settings,
  Edit,
  Trash2,
  Plus,
  Minus,
  Check,
  X,
  ChevronLeft,
  ChevronRight,
  ChevronUp,
  ChevronDown,
  ArrowLeft,
  ArrowRight,
  ArrowUp,
  ArrowDown,
  Menu,
  Grid,
  List,
  Eye,
  EyeOff,
  Lock,
  Unlock,
  Image as ImageIcon,
  File,
  Folder,
  Link,
  ExternalLink,
  Copy,
  Save,
  RefreshCw,
  Play,
  Pause,
  Stop,
  Volume2,
  VolumeX,
  Camera,
  Video,
  Music,
  Headphones,
  Mic,
  MicOff,
  Wifi,
  Battery,
  Signal,
  Zap,
  Shield,
  AlertCircle,
  CheckCircle,
  Info,
  HelpCircle,
  XCircle,
  Activity,
  BarChart,
  PieChart,
  TrendingUp,
  TrendingDown,
  DollarSign,
  CreditCard,
  ShoppingCart,
  ShoppingBag,
  Package,
  Truck,
  Gift,
  Tag,
  Percent,
  Target,
  Award,
  Trophy,
  Crown,
  Flag,
  Globe,
  Map,
  Compass,
  Navigation,
  Layers,
  Box,
  Database,
  Server,
  Cloud,
  CloudUpload,
  CloudDownload,
  Wrench,
  Tool,
  Hammer,
  Scissors,
  Palette,
  Brush,
  PenTool,
  Type,
  Bold,
  Italic,
  Underline,
  AlignLeft,
  AlignCenter,
  AlignRight,
  AlignJustify,
  List as ListIcon,
  Hash,
  Quote,
  Code,
  Terminal,
  Monitor,
  Smartphone,
  Tablet,
  Laptop,
  Desktop,
  Printer,
  Scanner,
  Keyboard,
  Mouse,
  Gamepad2,
  Controller,
  Tv,
  Radio,
  Speaker,
  Headset,
  Bluetooth,
  Usb,
  HardDrive,
  Cpu,
  MemoryStick,
  Disc,
  Cd,
  Dvd,
  Book,
  BookOpen,
  Newspaper,
  FileText,
  FileImage,
  FileVideo,
  FileAudio,
  FilePdf,
  FileWord,
  FileExcel,
  FilePowerpoint,
  Archive,
  FolderOpen,
  FolderPlus,
  FolderMinus,
  FolderX,
  Trash,
  Recycle,
  RotateCcw,
  RotateCw,
  FlipHorizontal,
  FlipVertical,
  Move,
  Maximize,
  Minimize,
  Maximize2,
  Minimize2,
  Square,
  Circle,
  Triangle,
  Hexagon,
  Octagon,
  Diamond,
  Heart as HeartIcon,
  Smile,
  Frown,
  Meh,
  ThumbsUp,
  ThumbsDown,
  Hand,
  Fingerprint,
  Key,
  Lock as LockIcon,
  Unlock as UnlockIcon,
  Shield as ShieldIcon,
  ShieldCheck,
  ShieldAlert,
  ShieldX,
  Bug,
  Coffee,
  Sun,
  Moon,
  Cloud as CloudIcon,
  CloudRain,
  CloudSnow,
  CloudLightning,
  Wind,
  Thermometer,
  Droplet,
  Flame,
  Snowflake,
  Umbrella,
  TreePine,
  Leaf,
  Flower,
  Sprout,
  Tree,
  Mountain,
  Waves,
  Fish,
  Bird,
  Cat,
  Dog,
  Rabbit,
  Car,
  Bus,
  Train,
  Plane,
  Ship,
  Bike,
  Motorbike,
  Truck as TruckIcon,
  Car as CarIcon,
  Building,
  Building2,
  Home as HomeIcon,
  Store,
  Bank,
  Hospital,
  School,
  Church,
  Mosque,
  Temple,
  Castle,
  Factory,
  Warehouse,
  Office,
  Apartment,
  House,
  Tent,
  Campfire,
  Candle,
  Lightbulb,
  Flashlight,
  Battery as BatteryIcon,
  Plug,
  Power,
  PowerOff,
  ToggleLeft,
  ToggleRight,
  Switch,
  Sliders,
  Toggle,
  Volume as VolumeIcon,
  Volume1,
  Volume2 as Volume2Icon,
  VolumeX as VolumeXIcon,
  Mic as MicIcon,
  MicOff as MicOffIcon,
  Video as VideoIcon,
  VideoOff,
  Camera as CameraIcon,
  CameraOff,
  Image as ImageIcon2,
  ImageOff,
  Film,
  Clapperboard,
  Tv as TvIcon,
  Radio as RadioIcon,
  Speaker as SpeakerIcon,
  Headphones as HeadphonesIcon,
  Headset as HeadsetIcon,
  Airpods,
  Watch,
  Smartwatch,
  Phone as PhoneIcon,
  PhoneCall,
  PhoneIncoming,
  PhoneOutgoing,
  PhoneMissed,
  PhoneOff,
  MessageCircle,
  MessageSquare,
  MessageSquareText,
  MessageSquareMore,
  MessageSquareReply,
  MessageSquareForward,
  MessageSquareQuote,
  MessageSquareCode,
  MessageSquareDashed,
  MessageSquarePlus,
  MessageSquareMinus,
  MessageSquareX,
  MessageSquareCheck,
  MessageSquareWarning,
  MessageSquareInfo,
  MessageSquareQuestion,
  MessageSquareHeart,
  MessageSquareSmile,
  MessageSquareFrown,
  MessageSquareMeh,
  MessageSquareThumbsUp,
  MessageSquareThumbsDown,
  MessageSquareHand,
  MessageSquareFingerprint,
  MessageSquareKey,
  MessageSquareLock,
  MessageSquareUnlock,
  MessageSquareShield,
  MessageSquareShieldCheck,
  MessageSquareShieldAlert,
  MessageSquareShieldX,
  MessageSquareBug,
  MessageSquareCoffee,
  MessageSquareSun,
  MessageSquareMoon,
  MessageSquareCloud,
  MessageSquareCloudRain,
  MessageSquareCloudSnow,
  MessageSquareCloudLightning,
  MessageSquareWind,
  MessageSquareThermometer,
  MessageSquareDroplet,
  MessageSquareFlame,
  MessageSquareSnowflake,
  MessageSquareUmbrella,
  MessageSquareTreePine,
  MessageSquareLeaf,
  MessageSquareFlower,
  MessageSquareSprout,
  MessageSquareTree,
  MessageSquareMountain,
  MessageSquareWaves,
  MessageSquareFish,
  MessageSquareBird,
  MessageSquareCat,
  MessageSquareDog,
  MessageSquareRabbit,
  MessageSquareCar,
  MessageSquareBus,
  MessageSquareTrain,
  MessageSquarePlane,
  MessageSquareShip,
  MessageSquareBike,
  MessageSquareMotorbike,
  MessageSquareTruck,
  MessageSquareBuilding,
  MessageSquareBuilding2,
  MessageSquareHome,
  MessageSquareStore,
  MessageSquareBank,
  MessageSquareHospital,
  MessageSquareSchool,
  MessageSquareChurch,
  MessageSquareMosque,
  MessageSquareTemple,
  MessageSquareCastle,
  MessageSquareFactory,
  MessageSquareWarehouse,
  MessageSquareOffice,
  MessageSquareApartment,
  MessageSquareHouse,
  MessageSquareTent,
  MessageSquareCampfire,
  MessageSquareCandle,
  MessageSquareLightbulb,
  MessageSquareFlashlight,
  MessageSquareBattery,
  MessageSquarePlug,
  MessageSquarePower,
  MessageSquarePowerOff,
  MessageSquareToggleLeft,
  MessageSquareToggleRight,
  MessageSquareSwitch,
  MessageSquareSliders,
  MessageSquareToggle,
  MessageSquareVolume,
  MessageSquareVolume1,
  MessageSquareVolume2,
  MessageSquareVolumeX,
  MessageSquareMic,
  MessageSquareMicOff,
  MessageSquareVideo,
  MessageSquareVideoOff,
  MessageSquareCamera,
  MessageSquareCameraOff,
  MessageSquareImage,
  MessageSquareImageOff,
  MessageSquareFilm,
  MessageSquareClapperboard,
  MessageSquareTv,
  MessageSquareRadio,
  MessageSquareSpeaker,
  MessageSquareHeadphones,
  MessageSquareHeadset,
  MessageSquareAirpods,
  MessageSquareWatch,
  MessageSquareSmartwatch,
  MessageSquarePhone,
  MessageSquarePhoneCall,
  MessageSquarePhoneIncoming,
  MessageSquarePhoneOutgoing,
  MessageSquarePhoneMissed,
  MessageSquarePhoneOff
} from 'lucide-react'

interface IconPickerProps {
  value: string
  onChange: (value: string) => void
  fieldName: string
  fieldConfig?: any
}

// Define available icons with their names
const AVAILABLE_ICONS = [
  { name: 'Home', component: Home },
  { name: 'User', component: User },
  { name: 'Mail', component: Mail },
  { name: 'Phone', component: Phone },
  { name: 'MapPin', component: MapPin },
  { name: 'Calendar', component: Calendar },
  { name: 'Clock', component: Clock },
  { name: 'Star', component: Star },
  { name: 'Heart', component: Heart },
  { name: 'Share2', component: Share2 },
  { name: 'Download', component: Download },
  { name: 'Upload', component: Upload },
  { name: 'Search', component: Search },
  { name: 'Filter', component: Filter },
  { name: 'Settings', component: Settings },
  { name: 'Edit', component: Edit },
  { name: 'Trash2', component: Trash2 },
  { name: 'Plus', component: Plus },
  { name: 'Minus', component: Minus },
  { name: 'Check', component: Check },
  { name: 'X', component: X },
  { name: 'ChevronLeft', component: ChevronLeft },
  { name: 'ChevronRight', component: ChevronRight },
  { name: 'ChevronUp', component: ChevronUp },
  { name: 'ChevronDown', component: ChevronDown },
  { name: 'ArrowLeft', component: ArrowLeft },
  { name: 'ArrowRight', component: ArrowRight },
  { name: 'ArrowUp', component: ArrowUp },
  { name: 'ArrowDown', component: ArrowDown },
  { name: 'Menu', component: Menu },
  { name: 'Grid', component: Grid },
  { name: 'List', component: List },
  { name: 'Eye', component: Eye },
  { name: 'EyeOff', component: EyeOff },
  { name: 'Lock', component: Lock },
  { name: 'Unlock', component: Unlock },
  { name: 'Image', component: ImageIcon },
  { name: 'File', component: File },
  { name: 'Folder', component: Folder },
  { name: 'Link', component: Link },
  { name: 'ExternalLink', component: ExternalLink },
  { name: 'Copy', component: Copy },
  { name: 'Save', component: Save },
  { name: 'RefreshCw', component: RefreshCw },
  { name: 'Play', component: Play },
  { name: 'Pause', component: Pause },
  { name: 'Stop', component: Stop },
  { name: 'Volume2', component: Volume2 },
  { name: 'VolumeX', component: VolumeX },
  { name: 'Camera', component: Camera },
  { name: 'Video', component: Video },
  { name: 'Music', component: Music },
  { name: 'Headphones', component: Headphones },
  { name: 'Mic', component: Mic },
  { name: 'MicOff', component: MicOff },
  { name: 'Wifi', component: Wifi },
  { name: 'Battery', component: Battery },
  { name: 'Signal', component: Signal },
  { name: 'Zap', component: Zap },
  { name: 'Shield', component: Shield },
  { name: 'AlertCircle', component: AlertCircle },
  { name: 'CheckCircle', component: CheckCircle },
  { name: 'Info', component: Info },
  { name: 'HelpCircle', component: HelpCircle },
  { name: 'XCircle', component: XCircle },
  { name: 'Activity', component: Activity },
  { name: 'BarChart', component: BarChart },
  { name: 'PieChart', component: PieChart },
  { name: 'TrendingUp', component: TrendingUp },
  { name: 'TrendingDown', component: TrendingDown },
  { name: 'DollarSign', component: DollarSign },
  { name: 'CreditCard', component: CreditCard },
  { name: 'ShoppingCart', component: ShoppingCart },
  { name: 'ShoppingBag', component: ShoppingBag },
  { name: 'Package', component: Package },
  { name: 'Truck', component: Truck },
  { name: 'Gift', component: Gift },
  { name: 'Tag', component: Tag },
  { name: 'Percent', component: Percent },
  { name: 'Target', component: Target },
  { name: 'Award', component: Award },
  { name: 'Trophy', component: Trophy },
  { name: 'Crown', component: Crown },
  { name: 'Flag', component: Flag },
  { name: 'Globe', component: Globe },
  { name: 'Map', component: Map },
  { name: 'Compass', component: Compass },
  { name: 'Navigation', component: Navigation },
  { name: 'Layers', component: Layers },
  { name: 'Box', component: Box },
  { name: 'Database', component: Database },
  { name: 'Server', component: Server },
  { name: 'Cloud', component: Cloud },
  { name: 'CloudUpload', component: CloudUpload },
  { name: 'CloudDownload', component: CloudDownload },
  { name: 'Wrench', component: Wrench },
  { name: 'Tool', component: Tool },
  { name: 'Hammer', component: Hammer },
  { name: 'Scissors', component: Scissors },
  { name: 'Palette', component: Palette },
  { name: 'Brush', component: Brush },
  { name: 'PenTool', component: PenTool },
  { name: 'Type', component: Type },
  { name: 'Bold', component: Bold },
  { name: 'Italic', component: Italic },
  { name: 'Underline', component: Underline },
  { name: 'AlignLeft', component: AlignLeft },
  { name: 'AlignCenter', component: AlignCenter },
  { name: 'AlignRight', component: AlignRight },
  { name: 'AlignJustify', component: AlignJustify },
  { name: 'List', component: ListIcon },
  { name: 'Hash', component: Hash },
  { name: 'Quote', component: Quote },
  { name: 'Code', component: Code },
  { name: 'Terminal', component: Terminal },
  { name: 'Monitor', component: Monitor },
  { name: 'Smartphone', component: Smartphone },
  { name: 'Tablet', component: Tablet },
  { name: 'Laptop', component: Laptop },
  { name: 'Desktop', component: Desktop },
  { name: 'Printer', component: Printer },
  { name: 'Scanner', component: Scanner },
  { name: 'Keyboard', component: Keyboard },
  { name: 'Mouse', component: Mouse },
  { name: 'Gamepad2', component: Gamepad2 },
  { name: 'Controller', component: Controller },
  { name: 'Tv', component: Tv },
  { name: 'Radio', component: Radio },
  { name: 'Speaker', component: Speaker },
  { name: 'Headset', component: Headset },
  { name: 'Bluetooth', component: Bluetooth },
  { name: 'Usb', component: Usb },
  { name: 'HardDrive', component: HardDrive },
  { name: 'Cpu', component: Cpu },
  { name: 'MemoryStick', component: MemoryStick },
  { name: 'Disc', component: Disc },
  { name: 'Cd', component: Cd },
  { name: 'Dvd', component: Dvd },
  { name: 'Book', component: Book },
  { name: 'BookOpen', component: BookOpen },
  { name: 'Newspaper', component: Newspaper },
  { name: 'FileText', component: FileText },
  { name: 'FileImage', component: FileImage },
  { name: 'FileVideo', component: FileVideo },
  { name: 'FileAudio', component: FileAudio },
  { name: 'FilePdf', component: FilePdf },
  { name: 'FileWord', component: FileWord },
  { name: 'FileExcel', component: FileExcel },
  { name: 'FilePowerpoint', component: FilePowerpoint },
  { name: 'Archive', component: Archive },
  { name: 'FolderOpen', component: FolderOpen },
  { name: 'FolderPlus', component: FolderPlus },
  { name: 'FolderMinus', component: FolderMinus },
  { name: 'FolderX', component: FolderX },
  { name: 'Trash', component: Trash },
  { name: 'Recycle', component: Recycle },
  { name: 'RotateCcw', component: RotateCcw },
  { name: 'RotateCw', component: RotateCw },
  { name: 'FlipHorizontal', component: FlipHorizontal },
  { name: 'FlipVertical', component: FlipVertical },
  { name: 'Move', component: Move },
  { name: 'Maximize', component: Maximize },
  { name: 'Minimize', component: Minimize },
  { name: 'Maximize2', component: Maximize2 },
  { name: 'Minimize2', component: Minimize2 },
  { name: 'Square', component: Square },
  { name: 'Circle', component: Circle },
  { name: 'Triangle', component: Triangle },
  { name: 'Hexagon', component: Hexagon },
  { name: 'Octagon', component: Octagon },
  { name: 'Diamond', component: Diamond },
  { name: 'Heart', component: HeartIcon },
  { name: 'Smile', component: Smile },
  { name: 'Frown', component: Frown },
  { name: 'Meh', component: Meh },
  { name: 'ThumbsUp', component: ThumbsUp },
  { name: 'ThumbsDown', component: ThumbsDown },
  { name: 'Hand', component: Hand },
  { name: 'Fingerprint', component: Fingerprint },
  { name: 'Key', component: Key },
  { name: 'Lock', component: LockIcon },
  { name: 'Unlock', component: UnlockIcon },
  { name: 'Shield', component: ShieldIcon },
  { name: 'ShieldCheck', component: ShieldCheck },
  { name: 'ShieldAlert', component: ShieldAlert },
  { name: 'ShieldX', component: ShieldX },
  { name: 'Bug', component: Bug },
  { name: 'Coffee', component: Coffee },
  { name: 'Sun', component: Sun },
  { name: 'Moon', component: Moon },
  { name: 'Cloud', component: CloudIcon },
  { name: 'CloudRain', component: CloudRain },
  { name: 'CloudSnow', component: CloudSnow },
  { name: 'CloudLightning', component: CloudLightning },
  { name: 'Wind', component: Wind },
  { name: 'Thermometer', component: Thermometer },
  { name: 'Droplet', component: Droplet },
  { name: 'Flame', component: Flame },
  { name: 'Snowflake', component: Snowflake },
  { name: 'Umbrella', component: Umbrella },
  { name: 'TreePine', component: TreePine },
  { name: 'Leaf', component: Leaf },
  { name: 'Flower', component: Flower },
  { name: 'Sprout', component: Sprout },
  { name: 'Tree', component: Tree },
  { name: 'Mountain', component: Mountain },
  { name: 'Waves', component: Waves },
  { name: 'Fish', component: Fish },
  { name: 'Bird', component: Bird },
  { name: 'Cat', component: Cat },
  { name: 'Dog', component: Dog },
  { name: 'Rabbit', component: Rabbit },
  { name: 'Car', component: Car },
  { name: 'Bus', component: Bus },
  { name: 'Train', component: Train },
  { name: 'Plane', component: Plane },
  { name: 'Ship', component: Ship },
  { name: 'Bike', component: Bike },
  { name: 'Motorbike', component: Motorbike },
  { name: 'Truck', component: TruckIcon },
  { name: 'Car', component: CarIcon },
  { name: 'Building', component: Building },
  { name: 'Building2', component: Building2 },
  { name: 'Home', component: HomeIcon },
  { name: 'Store', component: Store },
  { name: 'Bank', component: Bank },
  { name: 'Hospital', component: Hospital },
  { name: 'School', component: School },
  { name: 'Church', component: Church },
  { name: 'Mosque', component: Mosque },
  { name: 'Temple', component: Temple },
  { name: 'Castle', component: Castle },
  { name: 'Factory', component: Factory },
  { name: 'Warehouse', component: Warehouse },
  { name: 'Office', component: Office },
  { name: 'Apartment', component: Apartment },
  { name: 'House', component: House },
  { name: 'Tent', component: Tent },
  { name: 'Campfire', component: Campfire },
  { name: 'Candle', component: Candle },
  { name: 'Lightbulb', component: Lightbulb },
  { name: 'Flashlight', component: Flashlight },
  { name: 'Battery', component: BatteryIcon },
  { name: 'Plug', component: Plug },
  { name: 'Power', component: Power },
  { name: 'PowerOff', component: PowerOff },
  { name: 'ToggleLeft', component: ToggleLeft },
  { name: 'ToggleRight', component: ToggleRight },
  { name: 'Switch', component: Switch },
  { name: 'Sliders', component: Sliders },
  { name: 'Toggle', component: Toggle },
  { name: 'Volume', component: VolumeIcon },
  { name: 'Volume1', component: Volume1 },
  { name: 'Volume2', component: Volume2Icon },
  { name: 'VolumeX', component: VolumeXIcon },
  { name: 'Mic', component: MicIcon },
  { name: 'MicOff', component: MicOffIcon },
  { name: 'Video', component: VideoIcon },
  { name: 'VideoOff', component: VideoOff },
  { name: 'Camera', component: CameraIcon },
  { name: 'CameraOff', component: CameraOff },
  { name: 'Image', component: ImageIcon2 },
  { name: 'ImageOff', component: ImageOff },
  { name: 'Film', component: Film },
  { name: 'Clapperboard', component: Clapperboard },
  { name: 'Tv', component: TvIcon },
  { name: 'Radio', component: RadioIcon },
  { name: 'Speaker', component: SpeakerIcon },
  { name: 'Headphones', component: HeadphonesIcon },
  { name: 'Headset', component: HeadsetIcon },
  { name: 'Airpods', component: Airpods },
  { name: 'Watch', component: Watch },
  { name: 'Smartwatch', component: Smartwatch },
  { name: 'Phone', component: PhoneIcon },
  { name: 'PhoneCall', component: PhoneCall },
  { name: 'PhoneIncoming', component: PhoneIncoming },
  { name: 'PhoneOutgoing', component: PhoneOutgoing },
  { name: 'PhoneMissed', component: PhoneMissed },
  { name: 'PhoneOff', component: PhoneOff },
  { name: 'MessageCircle', component: MessageCircle },
  { name: 'MessageSquare', component: MessageSquare },
  { name: 'MessageSquareText', component: MessageSquareText },
  { name: 'MessageSquareMore', component: MessageSquareMore },
  { name: 'MessageSquareReply', component: MessageSquareReply },
  { name: 'MessageSquareForward', component: MessageSquareForward },
  { name: 'MessageSquareQuote', component: MessageSquareQuote },
  { name: 'MessageSquareCode', component: MessageSquareCode },
  { name: 'MessageSquareDashed', component: MessageSquareDashed },
  { name: 'MessageSquarePlus', component: MessageSquarePlus },
  { name: 'MessageSquareMinus', component: MessageSquareMinus },
  { name: 'MessageSquareX', component: MessageSquareX },
  { name: 'MessageSquareCheck', component: MessageSquareCheck },
  { name: 'MessageSquareWarning', component: MessageSquareWarning },
  { name: 'MessageSquareInfo', component: MessageSquareInfo },
  { name: 'MessageSquareQuestion', component: MessageSquareQuestion },
  { name: 'MessageSquareHeart', component: MessageSquareHeart },
  { name: 'MessageSquareSmile', component: MessageSquareSmile },
  { name: 'MessageSquareFrown', component: MessageSquareFrown },
  { name: 'MessageSquareMeh', component: MessageSquareMeh },
  { name: 'MessageSquareThumbsUp', component: MessageSquareThumbsUp },
  { name: 'MessageSquareThumbsDown', component: MessageSquareThumbsDown },
  { name: 'MessageSquareHand', component: MessageSquareHand },
  { name: 'MessageSquareFingerprint', component: MessageSquareFingerprint },
  { name: 'MessageSquareKey', component: MessageSquareKey },
  { name: 'MessageSquareLock', component: MessageSquareLock },
  { name: 'MessageSquareUnlock', component: MessageSquareUnlock },
  { name: 'MessageSquareShield', component: MessageSquareShield },
  { name: 'MessageSquareShieldCheck', component: MessageSquareShieldCheck },
  { name: 'MessageSquareShieldAlert', component: MessageSquareShieldAlert },
  { name: 'MessageSquareShieldX', component: MessageSquareShieldX },
  { name: 'MessageSquareBug', component: MessageSquareBug },
  { name: 'MessageSquareCoffee', component: MessageSquareCoffee },
  { name: 'MessageSquareSun', component: MessageSquareSun },
  { name: 'MessageSquareMoon', component: MessageSquareMoon },
  { name: 'MessageSquareCloud', component: MessageSquareCloud },
  { name: 'MessageSquareCloudRain', component: MessageSquareCloudRain },
  { name: 'MessageSquareCloudSnow', component: MessageSquareCloudSnow },
  { name: 'MessageSquareCloudLightning', component: MessageSquareCloudLightning },
  { name: 'MessageSquareWind', component: MessageSquareWind },
  { name: 'MessageSquareThermometer', component: MessageSquareThermometer },
  { name: 'MessageSquareDroplet', component: MessageSquareDroplet },
  { name: 'MessageSquareFlame', component: MessageSquareFlame },
  { name: 'MessageSquareSnowflake', component: MessageSquareSnowflake },
  { name: 'MessageSquareUmbrella', component: MessageSquareUmbrella },
  { name: 'MessageSquareTreePine', component: MessageSquareTreePine },
  { name: 'MessageSquareLeaf', component: MessageSquareLeaf },
  { name: 'MessageSquareFlower', component: MessageSquareFlower },
  { name: 'MessageSquareSprout', component: MessageSquareSprout },
  { name: 'MessageSquareTree', component: MessageSquareTree },
  { name: 'MessageSquareMountain', component: MessageSquareMountain },
  { name: 'MessageSquareWaves', component: MessageSquareWaves },
  { name: 'MessageSquareFish', component: MessageSquareFish },
  { name: 'MessageSquareBird', component: MessageSquareBird },
  { name: 'MessageSquareCat', component: MessageSquareCat },
  { name: 'MessageSquareDog', component: MessageSquareDog },
  { name: 'MessageSquareRabbit', component: MessageSquareRabbit },
  { name: 'MessageSquareCar', component: MessageSquareCar },
  { name: 'MessageSquareBus', component: MessageSquareBus },
  { name: 'MessageSquareTrain', component: MessageSquareTrain },
  { name: 'MessageSquarePlane', component: MessageSquarePlane },
  { name: 'MessageSquareShip', component: MessageSquareShip },
  { name: 'MessageSquareBike', component: MessageSquareBike },
  { name: 'MessageSquareMotorbike', component: MessageSquareMotorbike },
  { name: 'MessageSquareTruck', component: MessageSquareTruck },
  { name: 'MessageSquareBuilding', component: MessageSquareBuilding },
  { name: 'MessageSquareBuilding2', component: MessageSquareBuilding2 },
  { name: 'MessageSquareHome', component: MessageSquareHome },
  { name: 'MessageSquareStore', component: MessageSquareStore },
  { name: 'MessageSquareBank', component: MessageSquareBank },
  { name: 'MessageSquareHospital', component: MessageSquareHospital },
  { name: 'MessageSquareSchool', component: MessageSquareSchool },
  { name: 'MessageSquareChurch', component: MessageSquareChurch },
  { name: 'MessageSquareMosque', component: MessageSquareMosque },
  { name: 'MessageSquareTemple', component: MessageSquareTemple },
  { name: 'MessageSquareCastle', component: MessageSquareCastle },
  { name: 'MessageSquareFactory', component: MessageSquareFactory },
  { name: 'MessageSquareWarehouse', component: MessageSquareWarehouse },
  { name: 'MessageSquareOffice', component: MessageSquareOffice },
  { name: 'MessageSquareApartment', component: MessageSquareApartment },
  { name: 'MessageSquareHouse', component: MessageSquareHouse },
  { name: 'MessageSquareTent', component: MessageSquareTent },
  { name: 'MessageSquareCampfire', component: MessageSquareCampfire },
  { name: 'MessageSquareCandle', component: MessageSquareCandle },
  { name: 'MessageSquareLightbulb', component: MessageSquareLightbulb },
  { name: 'MessageSquareFlashlight', component: MessageSquareFlashlight },
  { name: 'MessageSquareBattery', component: MessageSquareBattery },
  { name: 'MessageSquarePlug', component: MessageSquarePlug },
  { name: 'MessageSquarePower', component: MessageSquarePower },
  { name: 'MessageSquarePowerOff', component: MessageSquarePowerOff },
  { name: 'MessageSquareToggleLeft', component: MessageSquareToggleLeft },
  { name: 'MessageSquareToggleRight', component: MessageSquareToggleRight },
  { name: 'MessageSquareSwitch', component: MessageSquareSwitch },
  { name: 'MessageSquareSliders', component: MessageSquareSliders },
  { name: 'MessageSquareToggle', component: MessageSquareToggle },
  { name: 'MessageSquareVolume', component: MessageSquareVolume },
  { name: 'MessageSquareVolume1', component: MessageSquareVolume1 },
  { name: 'MessageSquareVolume2', component: MessageSquareVolume2 },
  { name: 'MessageSquareVolumeX', component: MessageSquareVolumeX },
  { name: 'MessageSquareMic', component: MessageSquareMic },
  { name: 'MessageSquareMicOff', component: MessageSquareMicOff },
  { name: 'MessageSquareVideo', component: MessageSquareVideo },
  { name: 'MessageSquareVideoOff', component: MessageSquareVideoOff },
  { name: 'MessageSquareCamera', component: MessageSquareCamera },
  { name: 'MessageSquareCameraOff', component: MessageSquareCameraOff },
  { name: 'MessageSquareImage', component: MessageSquareImage },
  { name: 'MessageSquareImageOff', component: MessageSquareImageOff },
  { name: 'MessageSquareFilm', component: MessageSquareFilm },
  { name: 'MessageSquareClapperboard', component: MessageSquareClapperboard },
  { name: 'MessageSquareTv', component: MessageSquareTv },
  { name: 'MessageSquareRadio', component: MessageSquareRadio },
  { name: 'MessageSquareSpeaker', component: MessageSquareSpeaker },
  { name: 'MessageSquareHeadphones', component: MessageSquareHeadphones },
  { name: 'MessageSquareHeadset', component: MessageSquareHeadset },
  { name: 'MessageSquareAirpods', component: MessageSquareAirpods },
  { name: 'MessageSquareWatch', component: MessageSquareWatch },
  { name: 'MessageSquareSmartwatch', component: MessageSquareSmartwatch },
  { name: 'MessageSquarePhone', component: MessageSquarePhone },
  { name: 'MessageSquarePhoneCall', component: MessageSquarePhoneCall },
  { name: 'MessageSquarePhoneIncoming', component: MessageSquarePhoneIncoming },
  { name: 'MessageSquarePhoneOutgoing', component: MessageSquarePhoneOutgoing },
  { name: 'MessageSquarePhoneMissed', component: MessageSquarePhoneMissed },
  { name: 'MessageSquarePhoneOff', component: MessageSquarePhoneOff }
]

export const IconPicker: React.FC<IconPickerProps> = ({
  value = 'Home',
  onChange,
  fieldName,
  fieldConfig
}) => {
  const [isOpen, setIsOpen] = useState(false)
  const [searchQuery, setSearchQuery] = useState('')

  const filteredIcons = AVAILABLE_ICONS.filter(icon =>
    icon.name.toLowerCase().includes(searchQuery.toLowerCase())
  )

  const selectedIcon = AVAILABLE_ICONS.find(icon => icon.name === value) || AVAILABLE_ICONS[0]

  const handleIconSelect = (iconName: string) => {
    onChange(iconName)
    setIsOpen(false)
  }

  return (
    <div className="space-y-2">
      <Label className="text-sm font-medium">
        {fieldConfig?.label || fieldName}
      </Label>
      
      <div className="flex items-center gap-2">
        <Popover open={isOpen} onOpenChange={setIsOpen}>
          <PopoverTrigger asChild>
            <Button
              variant="outline"
              className="h-10 w-20 p-1"
            >
              <selectedIcon.component className="w-4 h-4" />
            </Button>
          </PopoverTrigger>
          <PopoverContent className="w-80 p-4">
            <div className="space-y-4">
              {/* Search */}
              <div>
                <Input
                  placeholder="Search icons..."
                  value={searchQuery}
                  onChange={(e) => setSearchQuery(e.target.value)}
                  className="mb-3"
                />
              </div>

              {/* Current Selection */}
              <div className="flex items-center gap-3 p-2 bg-gray-50 rounded">
                <selectedIcon.component className="w-5 h-5" />
                <span className="text-sm font-medium">{selectedIcon.name}</span>
              </div>

              {/* Icon Grid */}
              <ScrollArea className="h-64">
                <div className="grid grid-cols-8 gap-2">
                  {filteredIcons.map((icon) => {
                    const IconComponent = icon.component
                    return (
                      <button
                        key={icon.name}
                        className={cn(
                          "w-8 h-8 flex items-center justify-center rounded border hover:bg-gray-100 transition-colors",
                          value === icon.name ? "border-blue-500 bg-blue-50" : "border-gray-200"
                        )}
                        onClick={() => handleIconSelect(icon.name)}
                        title={icon.name}
                      >
                        <IconComponent className="w-4 h-4" />
                      </button>
                    )
                  })}
                </div>
              </ScrollArea>

              {filteredIcons.length === 0 && (
                <div className="text-center py-4 text-sm text-muted-foreground">
                  No icons found matching "{searchQuery}"
                </div>
              )}

              {/* Action Buttons */}
              <div className="flex gap-2 pt-2">
                <Button
                  size="sm"
                  onClick={() => setIsOpen(false)}
                  className="flex-1"
                >
                  Done
                </Button>
                <Button
                  size="sm"
                  variant="outline"
                  onClick={() => handleIconSelect('Home')}
                >
                  Reset
                </Button>
              </div>
            </div>
          </PopoverContent>
        </Popover>

        <Input
          value={value}
          onChange={(e) => onChange(e.target.value)}
          placeholder="Icon name"
          className="flex-1"
        />
      </div>

      {fieldConfig?.description && (
        <p className="text-xs text-muted-foreground">
          {fieldConfig.description}
        </p>
      )}
    </div>
  )
}
